module RAND48_DEV_MODULE
use CUDAFOR
     implicit none
       integer,    constant::dm_SIZE = 0  
       !integer(8), constant::dm_BIGRAND48_A,dm_BIGRAND48_C  
       !integer(8), constant::dm_T16, dm_T32, dm_T48
       !integer(8), device, dimension(:), allocatable::dm_SEEDS  
       !integer(8), parameter::dm_T16=65536, dm_T32=4294967296, dm_T48=281474976710656
       !integer(8), parameter::dm_DRAND48_A=25214903917,dm_DRAND48_C=11

contains

      attributes(global) subroutine DEV_DRAND48(N, SEEDS, BIGRAND48_A,BIGRAND48_C,dR)
           integer(4), value:: N
           real*8, dimension(N), intent(in)::SEEDS
           real*8, dimension(N) :: dR
           integer(8), value::BIGRAND48_A,BIGRAND48_C 
            
           integer(8)::T16, T32, T48
           !integer(8)::DRAND48_A=25214903917,DRAND48_C=11
           integer(8)::X,T,T4(3)
           !integer(2)::XBIT(4), tBIT(4)
           !equivalence(X,XBIT)
           !equivalence(T,tBIT)
           integer::IT
            
            
            !
            T16=65536
            T32=4294967296
            T48=281474976710656
            !the id of the random number
            IT  = (threadidx%y-1)*blockdim%x + threadidx%x 
            T =  SEEDS(IT)*BIGRAND48_A + BIGRAND48_C
         
            T4 = 0
            !T4(3) = IBITS (T,32, 16) !IOR(T4(3),tBIT(3))
            !T4(2) = IBITS (T,2*8, 2*8) !IOR(T4(2),tBIT(2))
            !T4(1) = IBITS (T,0, 2*8)   !IOR(T4(1),tBIT(1))
	            
            !dR(IT) = 0.5D0+dble(T4(3))/dble(dm_T48)+dble(T4(2))/dble(dm_T32)+dble(T4(1))/dble(dm_T16)          
          return
      end subroutine DEV_DRAND48
      


end module RAND48_DEV_MODULE